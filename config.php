<?phprequire_once 'phplibs/autoload.php';require_once 'phplibs/phpmailer/phpmailer/language/phpmailer.lang-ru.php';//define('HOST', 'localhost');//define('USER', 'root');//define('DBNAME', 'portfolio');//define('PASSWORD', '');define('HOST', 'janet.timeweb.ru');define('USER', 'cn78016_portf');define('DBNAME', 'cn78016_portf');define('PASSWORD', 'pushgroupnsk1402');define('SECRET_KEY', '6LcEtw4TAAAAACfwiNR7xvxTzxq6j1x_zLAOXNur');define('PUBLIC_KEY', '6LcEtw4TAAAAAK8JC9lOcMvUdUW63Ea35SCG65rc');function connectToDB(){    setlocale(LC_CTYPE, array('ru_RU.utf8', 'ru_RU.utf8'));    setlocale(LC_ALL, array('ru_RU.utf8', 'ru_RU.utf8'));    $pdo = new PDO("mysql:dbname=".DBNAME.";host=".HOST.";", USER, PASSWORD);    return $pdo;}$data_sql = array(    'getPortfolio' => 'SELECT projects.id, projects.title, projects.thumb, projects.link, projects.description FROM projects ORDER BY projects.order ASC',);function getDataAsArray(PDO $pdo, $sql){    $result = $pdo->query($sql);    return $result->fetchAll(PDO::FETCH_ASSOC);}function clear_str($str){    return htmlspecialchars(strip_tags(trim($str)), ENT_QUOTES);}/** * * @param  string $string * @return string */function rus2translit($string) {    $converter = array(        '�' => 'a',   '�' => 'b',   '�' => 'v',        '�' => 'g',   '�' => 'd',   '�' => 'e',        '�' => 'e',   '�' => 'zh',  '�' => 'z',        '�' => 'i',   '�' => 'y',   '�' => 'k',        '�' => 'l',   '�' => 'm',   '�' => 'n',        '�' => 'o',   '�' => 'p',   '�' => 'r',        '�' => 's',   '�' => 't',   '�' => 'u',        '�' => 'f',   '�' => 'h',   '�' => 'c',        '�' => 'ch',  '�' => 'sh',  '�' => 'sch',        '�' => '\'',  '�' => 'y',   '�' => '\'',        '�' => 'e',   '�' => 'yu',  '�' => 'ya',        '�' => 'A',   '�' => 'B',   '�' => 'V',        '�' => 'G',   '�' => 'D',   '�' => 'E',        '�' => 'E',   '�' => 'Zh',  '�' => 'Z',        '�' => 'I',   '�' => 'Y',   '�' => 'K',        '�' => 'L',   '�' => 'M',   '�' => 'N',        '�' => 'O',   '�' => 'P',   '�' => 'R',        '�' => 'S',   '�' => 'T',   '�' => 'U',        '�' => 'F',   '�' => 'H',   '�' => 'C',        '�' => 'Ch',  '�' => 'Sh',  '�' => 'Sch',        '�' => '\'',  '�' => 'Y',   '�' => '\'',        '�' => 'E',   '�' => 'Yu',  '�' => 'Ya',    );    return strtr($string, $converter);}/** * * @param $str * @return mixed|string */function str2url($str) {    // ��������� � ��������    $str = rus2translit($str);    // � ������ �������    $str = strtolower($str);    // ������� ��� �������� ��� �� "-"    $str = preg_replace('~[^-a-z0-9_]+~u', '-', $str);    // ������� ��������� � �������� '-'    $str = trim($str, "-");    return $str;}/** * * * @param $key * @param $catpcha * @param $ip * * @return bool */function check_captcha($key, $catpcha, $ip){    $url_to_send = "https://www.google.com/recaptcha/api/siteverify?secret=".$key.'&response='.$catpcha.'&ip='.$ip;    $data_request = file_get_contents($url_to_send);    $data =  json_decode($data_request, true);    if(isset($data['success']) && $data['success'] == 1){        return true;    } else {        return false;    }}/** * @param      $data * @param null $file * * @return bool * @throws \Exception * @throws \phpmailerException */function send_message_to_email($data, $file = null){    $mail = new PHPMailer;    $mail->isSendmail();    // ��������� ����������� ������    $mail->setFrom($data['email_from'], $data['name_from']);    // ��������� ���������� ������    $mail->addAddress($data['email_to'], $data['name_to']);    // ��������� ���� ������    $mail->Subject = $data['subject'];    // ������������� ����� ���������    $mail->msgHTML($data['message']);    if($file){        $mail->addAttachment($file);    }    $result = $mail->send();    $mail->clearAddresses();    return $result;}